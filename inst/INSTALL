This point is important, so I just want to start off with this. It's not
that I'm yelling at you, I just think it will save you lots of frustration:

      IF YOU ARE HAVING PROBLEMS INSTALLING SHIKKEN USING THE VERSION OF
      SHOGUN THAT IS BUNDLED WITH THIS PACKAGE, THEN FOLLOW THE STEPS
      OUTLINED IN SECTION (1) BELOW.

By following section (1), you will end up using shogun's build process to
compile and install a version of the shogun-toolbox configured for your system,
which you can then have shikken link to.

If you do not want to customize/tweak the install, simply install this package
in "the usual way" using R's installation mechanisms (via CRAN). In an R
workspace:

    R> install.packages('shikken')

The compilation of shikken/shogun is handled through some "creative" use
of the respective src/Makevars[.*] files along with the src/config.site file.

Installation of the shogun-toolbox is a bit complex and it involves:

  (i) detection of system capabilities; and
  (ii) serializing two files based on this detection:
    (a) shogun/lib/config.h;  and
    (b) shogun/base/class_list.cpp

shikken does not use autoconf to detect your system's capabilities, but rather
chooses some sensible defaults for your platform. It also includes a
pre-serialized version of (a) and (b) above which attempts to work properly
given your configuration which are 'sliced and diced' during compile time given
the different things defined in the `DEFINED` variable that is weaved together
through the various src/Makevars[.*] files during the R CMD INSTALL process.


-------------------------------------------------------------------------------
1. Installing shikken against a previously installed version of libshogun.
-------------------------------------------------------------------------------

   This is likely the easiest way for you to customize your shogun-toolbox
   library so that shikken can work with it. This should automatically detect
   capabilities your system supplies, like xml support, hdf5 support,
   LAPACK support, etc.
   
   You will be downloading a *release* version of the shogun-toolbox and
   installing the `libshogun` interface into your system separately. Once
   that finishes successfully, you can install shikken by linking against
   the installed library and headers.
   
   So, download and uncompress the shogun-toolbox, then:
   
       $ cd /path/to/your/shogun-toolbox/src
       $ ./configure --interfaces=
       $ make -j4 && make install
   
   If you didn't set a --prefix directive during your ./configure step,
   it will install by default into DIR=/usr/local. Two things are necessary
   to exist on your system before continuing:
   
     (i)  DIR/include/shogun : This directory has the header files.
     (ii) DIR/lib/libshogun* : This is the shogun library we link against.
   
   To compile shikken against this library, copy SHIKKEN/src/config.site.dist
   to SHIKKEN/src/config.site and uncomment the WITH_SYS_SHOGUN and
   SYS_SHOGUN_PREFIX lines in src/config.site. Ensure that SYS_SHOGUN_PREFIX
   is set to the value for DIR previously described.
   
   Now install shikken "as usual" from the command line:
   
       $ R CMD INSTALL shikken-<version>

-------------------------------------------------------------------------------
2. Tweaking the shogun library included in this package before installation.
-------------------------------------------------------------------------------

   This installs the version of the shogun-toolbox that is included in this
   package under the inst/include/shogun directory.
   
   To try to enable/disable some functionality, you will be modifying the
   src/config.site file. First copy SHIKKEN/src/config.site.dist to
   SHIKKEN/src/config.site. Modify the parameters in SHIKKEN/src/config.site
   as described in that file.
   
   Once you have turned on/off the options you like, then you can install
   shikken from the command line as usual, eg:
   
       $ R CMD INSTALL shikken
   
   Where `shikken` is the parent directory that this file resides in, ie.
   the ROOT directory for this package.
