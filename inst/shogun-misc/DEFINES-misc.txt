These options are checked during the configure step

Detected Operating System: Darwin
Detected Host Architecture: i386
Checking for C Compiler ... 4.2.1, ok
Checking for C Compiler flags ... -fPIC -g -Wall -O9 -fexpensive-optimizations -frerun-cse-after-loop -fcse-follow-jumps -finline-functions -fschedule-insns2 -fthread-jumps -fforce-addr -fstrength-reduce -funroll-loops
Checking for C++ Compiler ... 4.2.1, ok
Checking for C++ Compiler flags ... -fPIC -g -Wall -O9 -fexpensive-optimizations -frerun-cse-after-loop -fcse-follow-jumps -finline-functions -fschedule-insns2 -fthread-jumps -fforce-addr -fstrength-reduce -funroll-loops
Checking for makedepend ... gcc -MM
Checking for Python ... 2.7.1
Checking for GNU Make ... GNU Make 3.81
Checking for Doxygen ... doxygen not detected, for documentation please install
Checking for CPU vendor ... GenuineIntel (6:7:10)
Checking for CPU type ...  Intel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz
Checking for GCC & CPU optimization abilities ... CPU optimization disabled. CPU not recognized or your compiler is too old.
error
Checking for compiler and kernel support of mmx ... yes
Checking for compiler and kernel support of mmxext ... yes
Checking for compiler and kernel support of sse ... yes
Checking for compiler and kernel support of sse2 ... yes
Checking for compiler and kernel support of cmov ... yes
Checking for xmmintrin.h ... yes
Checking for Word Size ... 64 bit
Checking for Math support (-lm) ... yes
Checking for Math powl() support ... yes
Checking for Math sqrtl() support ... yes
Checking for Math log2() support ... yes
Checking for Posix threads support ... yes
Checking for HDF5 (>= 1.8.0) support ... yes
Checking for libjson (json-c) ... no
Checking for libxml2 (>= 2.7.0) ... yes
Checking for AMD ACML support ... no
Checking for Intel MKL support ... no
Checking for Atlas support ... no
Checking for Mac OS vector library ... yes
Checking for ARPACK support ... no
Checking for CPLEX support ... no
Checking for GLPK ... no
Checking for lzo ... no
Checking for snappy ... no
Checking for gzip ... yes
Checking for bzip2 ... yes
Checking for lzma ... no
Checking for libshogun ... yes (internal in source tree)
Checking for libshogunui ... yes (internal in source tree)
Checking for R ... 2.13.0
Checking for R Developer Files ... yes
Checking for Java ... 1.6.0_24
Checking for Java native interface files (jni.h) ... yes
Checking for Jblas ... no
Checking for UJMP ... no
Checking for Mono C# ... not detected
Checking for Ruby ... 1.8.7
Checking for Ruby Developer Files ... yes
Checking for Lua ... not detected
Checking for SWIG ... 1.3.31
--------------------------------
All possible DEFINE(s)
----------------------

The most important of these will incorporated into the Makevars installation
approach over time.

$ grep -r "#ifdef" *.cpp . | cut -f 2 -d' '| sort | uniq
  ARRAY_STATISTICS
  CYGWIN
  DARWIN
  DEBUG
  DEBUG_COMMSCORING
  DEBUG_DOTFEATURES
  DEBUG_HASHEDWD
  DEBUG_HIERARCHICAL
  DEBUG_HWSK_COMPUTATION
  DEBUG_LDA
  DEBUG_SUBGRADIENTLPM
  DEBUG_SUBGRADIENTSVM
  DEBUG_WDFEATURES
  DYNPROG_DEBUG
  DYNPROG_TIMING
  DYNPROG_TIMING_DETAIL
  FIX_POS
  HAVE_ACML
  HAVE_ATLAS
  HAVE_HDF5
  HAVE_JSON
  HAVE_LAPACK
  HAVE_LOG2
  HAVE_MKL
  HAVE_POWL
  HAVE_SQRTL
  HAVE_XML
  HMM_DEBUG
  LOG_SUMARRAY
  LOG_SUM_ARRAY
  LPM_DEBUG
  MCSVM_DEBUG
  MUSRECALC
  PLIFARRAY_DEBUG
  PLIF_DEBUG
  SUNOS
  SVMLIGHT
  TEST
  TRACE_MEMORY_ALLOCS
  TRIE_CHECK_EVERYTHING
  USE_BIGSTATES
  USE_BZIP2
  USE_CPLEX
  USE_GLPK
  USE_GZIP
  USE_HMMCACHE
  USE_HMMDEBUG
  USE_HMMPARALLEL
  USE_HMMPARALLEL_STRUCTURES
  USE_LOGCACHE
  USE_LOGCACHE	
  USE_LOGSUMARRAY
  USE_LOGSUMARRAY//AAA
  USE_LZMA
  USE_LZO
  USE_PATHDEBUG
  USE_REFERENCE_COUNTING
  USE_SHORTREAL_KERNELCACHE
  USE_SNAPPY
  USE_SVMLIGHT
  USE_TMP_ARRAYCLASS
  VARIABLES_ON_STACK
  VPM_ADA
  WIN32
  _GLIBCXX_CMATH
  _WIN32

